{"version":3,"sources":["assets/images/burger-logo.png","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControler.js","components/Burger/BuildControls/Error/Error.js","components/Burger/BuildControls/factor/Factor.js","components/Burger/BuildControls/factor/axios-orders.js","components/Burger/BuildControls/BuildControlers.js","containers/BurgerBuilder.js","components/Logo/Logo.js","components/Navigation/Navigation-items/NavigationItem.js","components/Navigation/Navigation-items/Navigation-items.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/Menu/Menu.js","components/Navigation/Menu/Close-Menu/CloseMenu.js","components/Layout/Layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","BurgerIngredient","ingredient","this","props","typeBread","className","Component","Burger","builder","sum","number","index","push","lMeat","ingredients","meat","lSalad","salad","lBacon","bacon","lCheese","cheese","lBurger","map","el","key","length","BuildControler","label","type","onClick","clickedRemove","disabled","disR","clickedAdd","disA","lengthKala","Error","useState","classes","setClasses","useEffect","showErr","setTimeout","Factor","Clabel","myel","obj","lengthBurgerIng","forEach","elem","unshift","name","len","state","priceKala","price","e","exit","buy","instance","axios","create","baseURL","BuildControlers","buildControler","showBtnFactor","showFactor","sendBurger","setState","propState","controls","preventDefault","preveState","post","person","family","phone","ing","then","alert","btnBuy","catch","id","priceBurger","break","BurgerBuilder","btnbuy","btnAdding","updatedCount","updatedIngredients","btnRemoving","Logo","src","burgerLogo","alt","NavigationItem","href","link","active","children","NavgationItems","Toolbar","clickedMenu","aria-hidden","Menu","classMenu","CloseMenu","Layout","menu","toggleMenu","togglerMenu","val","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4d3ef811.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","import React, {Component} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./BurgerIngredient.css\";\r\n\r\nclass BurgerIngredient extends Component {\r\n    render() {\r\n        let ingredient = null;\r\n\r\n        switch (this.props.typeBread) {\r\n            case ('bread-bottom'):\r\n                ingredient = <div className=\"BreadBottom\"></div>;\r\n                break;\r\n            case ('bread-top'):\r\n                ingredient = <div className=\"BreadTop\">\r\n                    <div className=\"Seeds1\"></div>\r\n                    <div className=\"Seeds2\"></div>\r\n                </div>;\r\n                break;\r\n            case (\"meat\"):\r\n                ingredient = <div className=\"Meat\"></div>;\r\n                break;\r\n            case (\"cheese\"):\r\n                ingredient = <div className=\"Cheese\"></div>;\r\n                break;\r\n            case (\"bacon\"):\r\n                ingredient = <div className=\"Bacon\"></div>;\r\n                break;\r\n            case (\"salad\"):\r\n                ingredient = <div className=\"Salad\"></div>;\r\n                break;\r\n            default:\r\n                ingredient = null;\r\n                break;\r\n        }\r\n\r\n        return ingredient\r\n    }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    typeBread: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default BurgerIngredient;","import React from \"react\";\r\nimport \"./Burger.css\";\r\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\r\n\r\nconst Burger = props => {\r\n    //ingredients\r\n    function builder(sum) {\r\n        let number = [];\r\n        for (let index = 0; index < sum; index++) {\r\n            number.push(index);\r\n        }\r\n        return number;\r\n    }\r\n\r\n    // const {meat , salad , bacon , cheese} = props.ingredients;\r\n    const lMeat = builder(props.ingredients.meat);\r\n    const lSalad = builder(props.ingredients.salad);\r\n    const lBacon = builder(props.ingredients.bacon);\r\n    const lCheese = builder(props.ingredients.cheese);\r\n    const lBurger = [...lMeat , ...lSalad , ...lBacon , ...lCheese];\r\n\r\n\r\n    // const meat = Array.from(...props.ingredients.meat);\r\n    return (\r\n        <div className=\"Burger\">\r\n            <BurgerIngredient typeBread=\"bread-top\"/>\r\n            {\r\n                lSalad.map((el, key) => (\r\n                    <BurgerIngredient typeBread=\"salad\" key={key}/>\r\n                ))\r\n            }\r\n            {\r\n                lBacon.map((el, key) => (\r\n                    <BurgerIngredient typeBread=\"bacon\" key={key}/>))\r\n            }\r\n            {\r\n                lCheese.map((el, key) => (\r\n                    <BurgerIngredient typeBread=\"cheese\" key={key}/>))\r\n            }\r\n            {\r\n                lMeat.map((el, key) => (\r\n                    <BurgerIngredient typeBread=\"meat\" key={key}/>))\r\n            }\r\n            {\r\n                lBurger.length === 0 ? <p>لطفا همبرگر مورد نظر خود را بسازید</p> : null\r\n            }\r\n            <BurgerIngredient typeBread=\"bread-bottom\"/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Burger;","import React  from \"react\";\r\nimport \"./BuildControler.css\";\r\n\r\nconst BuildControler = props => {\r\n    return (\r\n      <div className=\"BuildControl rtl\">\r\n        <div className=\"label\">{props.label}:</div>\r\n        <button\r\n          type=\"button\"\r\n          className=\"Less\"\r\n          onClick={props.clickedRemove}\r\n          disabled={props.disR}\r\n        >\r\n          کم کردن\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"More\"\r\n          onClick={props.clickedAdd}\r\n          disabled={props.disA}\r\n        >\r\n          افزودن\r\n        </button>\r\n        {props.lengthKala !== 0 ? <span className=\"badge\">تعداد:{props.lengthKala}</span> : null}\r\n      </div>\r\n    );\r\n};\r\nexport default BuildControler;","import React, { useEffect , useState } from \"react\";\r\nimport \"./Error.css\";\r\n\r\nconst Error = props => {\r\n    const [classes , setClasses] = useState(\"d-none\");\r\n\r\n    useEffect(() => {\r\n        if(!props.showErr){\r\n            setClasses(\"alert\");\r\n            setTimeout(() => {\r\n                setClasses(\"d-none\")\r\n            },3000)\r\n        }\r\n    },[props.showErr]);\r\n\r\n    return (\r\n        <p className={classes}>\r\n            نمیتوانید بیشتر از این مقدار {props.label} را قرار دهید\r\n        </p>\r\n    );\r\n};\r\n\r\nexport default Error;","import React, {useState} from \"react\";\r\nimport \"./Factor.css\";\r\n\r\nconst Factor = props => {\r\n    const [state] = useState({\r\n        label: () => {\r\n            const Clabel = [];\r\n            const myel = [\"نان\"];\r\n            for (let obj in props.lengthBurgerIng){\r\n                if(props.lengthBurgerIng[obj] !== 0){\r\n                    props.label.forEach((elem) => {\r\n                        if(elem.el === obj){\r\n                            myel.unshift(elem.label);\r\n                        }\r\n                    });\r\n                    Clabel.push({\r\n                        name: obj,\r\n                        label: myel,\r\n                        len: props.lengthBurgerIng[obj],\r\n                    });\r\n                }\r\n            }\r\n            return Clabel;\r\n        }\r\n    });\r\n\r\n    return (\r\n      <div className=\"modal\">\r\n        <div className=\"modal-element animation-modal\">\r\n          <div>\r\n            <h2 className=\"heading\">\r\n              پس از پرداخت هزینه همبرگر شما سریعا به محل درخواستی ارسال میگردد\r\n              (با پست رایگان)\r\n            </h2>\r\n            <hr />\r\n            <p className=\"para\">\r\n              اگر مایل به خرید نهایی هستید لطفا برروی گزینه ثبت سفارش کلیک کنید\r\n              چنانچه تمایل به ثبت نهایی ندارید برروی انصراف کلیک نمایید\r\n            </p>\r\n            <table className=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <td>شماره</td>\r\n                  <td>نام</td>\r\n                  <td>تعداد</td>\r\n                  <td>قیمت</td>\r\n                  <td>قیمت کل</td>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {state.label().map((el, key) => (\r\n                  <tr key={key}>\r\n                    <td>{key + 1}</td>\r\n                    <td>{el.label[key]}</td>\r\n                    <td>{props.lengthBurgerIng[el.name]}</td>\r\n                    <td>\r\n                      {props.priceKala[el.name]}\r\n                      <span> تومان </span>\r\n                    </td>\r\n                    <td>\r\n                      {props.priceKala[el.name] *\r\n                        props.lengthBurgerIng[el.name]}\r\n                      <span> تومان </span>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n                <tr>\r\n                  <td></td>\r\n                  <td></td>\r\n                  <td></td>\r\n                  <td></td>\r\n                  <td>\r\n                    {props.price}\r\n                    <span> تومان </span>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n            <p className=\"brand\">همبرگر ایران وای فای</p>\r\n            <div className=\"d-flex\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-danger\"\r\n                onClick={e => props.exit(e)}\r\n              >\r\n                انصراف\r\n              </button>\r\n              <button className=\"btn-success\" onClick={e => props.buy(e)}>\r\n                پرداخت نهایی\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Factor;","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://react-burger-6efde.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import React, {useState} from \"react\";\r\nimport \"./BuildControler.css\";\r\nimport BuildControler from \"./BuildControl/BuildControler\";\r\nimport Error from \"./Error/Error\";\r\nimport Factor from \"./factor/Factor\";\r\nimport axios from \"./factor/axios-orders\";\r\n\r\nconst BuildControlers = props => {\r\n    const [state, setState] = useState({\r\n        buildControler: [\r\n            {label: \"سالاد\", el: \"salad\"},\r\n            {label: \"گوشت\", el: \"meat\"},\r\n            {label: \"بیکن\", el: \"bacon\"},\r\n            {label: \"پنیر\", el: \"cheese\"}\r\n        ],\r\n        showBtnFactor: true,\r\n        showFactor: false,\r\n        sendBurger: false,\r\n    });\r\n    const propState = props.controls;\r\n\r\n    let showFactor = () => {\r\n        setState(preveState => ({\r\n            ...preveState,\r\n            showFactor: true,\r\n        }))\r\n    };\r\n\r\n    let btnExit = e => {\r\n        e.preventDefault();\r\n        setState(preveState => ({\r\n            ...preveState,\r\n            showFactor: false,\r\n        }))\r\n    };\r\n\r\n    let btnBuy = e => {\r\n        e.preventDefault();\r\n        setState(preveState => ({\r\n            ...preveState,\r\n            sendBurger: true,\r\n        }));\r\n        if (state.sendBurger) {\r\n            const post = {\r\n                person: {\r\n                    name: \"amir\",\r\n                    family: \"hemmati\",\r\n                    phone: \"09399440750\",\r\n                },\r\n                buy: {\r\n                    price: props.price,\r\n                    ing: props.controls,\r\n                }\r\n            };\r\n            axios.post(\"/orders.json\", post)\r\n                .then(() => {\r\n                    setState(preveState => ({\r\n                        ...preveState,\r\n                        sendBurger: false,\r\n                        showFactor: false\r\n                    }));\r\n                    alert(\"همبرگر  خریداری شد بزودی به ادرس مورد نظر ارسال میگردد\");\r\n                    props.btnBuy();\r\n                })\r\n                .catch(() => alert(\"خرید انجام نشد لطفا دوباره امتحان کنید\"))\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"BuildStyle\">\r\n            {\r\n                state.showFactor ? <Factor\r\n                    exit={btnExit}\r\n                    buy={btnBuy}\r\n                    label={state.buildControler}\r\n                    lengthBurgerIng={props.controls}\r\n                    priceKala={props.priceKala}\r\n                    price={props.price}\r\n                /> : null\r\n            }\r\n\r\n            {\r\n                props.price !== 0 ? (\r\n                    <p id=\"price-burger\">\r\n                        قیمت هبرگر: <span>{props.price} تومان</span>\r\n                    </p>\r\n                ) : null\r\n            }\r\n\r\n            {\r\n                state.buildControler.map((el, key) => {\r\n                    return (<Error\r\n                        key={key}\r\n                        label={el.label}\r\n                        showErr={propState[el.el] >= 4 ? false : true}\r\n                    />)\r\n                })\r\n            }\r\n\r\n            {\r\n                state.buildControler.map((el, key) => {\r\n                    return (\r\n                        <BuildControler\r\n                            label={el.label}\r\n                            key={key}\r\n                            clickedAdd={() => props.clickedAdd(el.el)}\r\n                            clickedRemove={() => props.clickedRemove(el.el)}\r\n                            disR={propState[el.el] === 0 ? true : false}\r\n                            disA={propState[el.el] >= 4 ? true : false}\r\n                            lengthKala={propState[el.el]}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n\r\n            <button type=\"button\" className=\"btn-factor\" disabled={props.price === 2000 ? true : null}\r\n                    onClick={showFactor}>\r\n                فاکتور و ثبت سفارش\r\n            </button>\r\n        </div>\r\n    )\r\n};\r\nexport default BuildControlers;","import React, { Component } from 'react';\r\nimport Burger from \"../components/Burger/Burger\";\r\nimport BuildControlers from \"../components/Burger/BuildControls/BuildControlers\";\r\n\r\nconst priceBurger = {\r\n    salad: 2000,\r\n    bacon: 6000,\r\n    cheese: 4000,\r\n    meat: 10000,\r\n    break: 1000,\r\n};\r\n\r\nclass BurgerBuilder extends Component{\r\n    state = {\r\n        ingredients: {\r\n            salad: 0,\r\n            bacon: 0,\r\n            cheese: 0,\r\n            meat: 0,\r\n            break: 2,\r\n        },\r\n        price: 2000,\r\n    };\r\n\r\n    btnbuy = () => {\r\n        this.setState(preveState => ({\r\n            ...preveState,\r\n            ingredients: {\r\n                salad: 0,\r\n                bacon: 0,\r\n                cheese: 0,\r\n                meat: 0,\r\n                break: 2,\r\n            },\r\n            price: 2000,\r\n        }))\r\n    };\r\n\r\n    btnAdding = (el) => {\r\n        const oldCount = this.state.ingredients[el];\r\n        const updatedCount = oldCount + 1;\r\n        const price = this.state.price + priceBurger[el];\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients,\r\n        };\r\n        updatedIngredients[el] = updatedCount;\r\n\r\n        //set price\r\n        this.setState({\r\n            price,\r\n            ingredients: {\r\n                ...updatedIngredients,\r\n            }\r\n        });\r\n    };\r\n\r\n    btnRemoving = el => {\r\n        const oldCount = this.state.ingredients[el];\r\n        const updatedCount = oldCount - 1;\r\n        const price =  this.state.price - priceBurger[el];\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients,\r\n        };\r\n        updatedIngredients[el] = updatedCount;\r\n\r\n        //set price\r\n        this.setState({\r\n            price,\r\n            ingredients: {\r\n                ...updatedIngredients,\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/*burger*/}\r\n                <Burger\r\n                    ingredients={this.state.ingredients}\r\n                />\r\n                {/*controler*/}\r\n                <BuildControlers\r\n                    controls={this.state.ingredients}\r\n                    clickedAdd={this.btnAdding}\r\n                    clickedRemove={this.btnRemoving}\r\n                    price={this.state.price}\r\n                    priceKala={priceBurger}\r\n                    btnBuy={this.btnbuy}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default BurgerBuilder;","import React from 'react';\r\nimport burgerLogo from \"../../assets/images/burger-logo.png\";\r\nimport \"./Logo.css\";\r\n\r\nconst Logo = props => {\r\n\r\n    return (\r\n        <div className=\"Logo\">\r\n            <img src={burgerLogo} alt=\"همبرگر ساز\"/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Logo;","import React from \"react\";\r\nimport \"./Navigation-item.css\"\r\n\r\nconst NavigationItem = props => {\r\n  return (\r\n    <li className=\"Navigation-item\">\r\n      <a \r\n        href={props.link}\r\n        className={props.active}\r\n      >\r\n        {props.children}\r\n      </a>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default NavigationItem;\r\n","import React from \"react\";\r\nimport \"./Navigation-items.css\";\r\nimport NavigationItem from \"./NavigationItem\";\r\n\r\nconst NavgationItems = props => {\r\n  return (\r\n    <ul className=\"Navigation-items\">\r\n      <NavigationItem link=\"/\" active=\"active\">\r\n        صفحه اصلی\r\n      </NavigationItem>\r\n      <NavigationItem link=\"/\" active={null}>\r\n        نامعلوم\r\n      </NavigationItem>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default NavgationItems;\r\n","import React from \"react\";\r\nimport \"./Toobar.css\";\r\nimport Logo from \"./../../Logo/Logo\";\r\nimport NavgationItems from './../Navigation-items/Navigation-items';\r\n\r\nconst Toolbar = props => {\r\n  return (\r\n    <header className=\"Toolbar\">\r\n      {/* menu component */}\r\n      <i\r\n        className=\"fa fa-bars fa-2x\"\r\n        onClick={props.clickedMenu}\r\n        aria-hidden=\"true\"\r\n      ></i>\r\n\r\n      {/* logo website */}\r\n      <Logo />\r\n      {/* nav tag */}\r\n      <nav>\r\n        {/* nav component */}\r\n        <NavgationItems />\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import React from 'react';\r\nimport Logo from \"./../../Logo/Logo\";\r\nimport NavgationItems from \"./../Navigation-items/Navigation-items\";\r\nimport \"./Menu.css\";\r\n\r\nconst Menu = props => {\r\n      let classMenu;\r\n      if (props.classMenu) {\r\n        classMenu = \"Menu\";\r\n      } else {\r\n        classMenu = \"Menu close\";\r\n      }\r\n\r\n    return (\r\n      <div className={classMenu}>\r\n        <div className=\"LogoM\">\r\n          <Logo />\r\n        </div>\r\n        <nav>\r\n          <NavgationItems />\r\n        </nav>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Menu;","import React from 'react'\r\nimport \"./CloseMenu.css\";\r\n\r\nconst CloseMenu = props => {\r\n    let classMenu;\r\n    if(props.classMenu){\r\n        classMenu = \"closeMenu open\";\r\n    }else{\r\n        classMenu = \"closeMenu close\";\r\n    }\r\n    return <div className={classMenu} onClick={props.clickedMenu}></div>;\r\n}\r\n\r\nexport default CloseMenu;","import React, {useState} from \"react\";\r\nimport \"./Layout.css\";\r\nimport Toolbar from \"./../Navigation/Toolbar/Toolbar\";\r\nimport Menu from \"./../Navigation/Menu/Menu\";\r\nimport CloseMenu from \"./../Navigation/Menu/Close-Menu/CloseMenu\";\r\n\r\nconst Layout = props => {\r\n  const [menu, toggleMenu] = useState(false);\r\n\r\n  const togglerMenu = (val) => {\r\n    toggleMenu(val);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Toolbar clickedMenu={() => togglerMenu(true)} />\r\n      <Menu classMenu={menu} />\r\n      <CloseMenu classMenu={menu} clickedMenu={() => togglerMenu(false)}/>\r\n      <main className=\"Content\">{props.children}</main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from 'react';\nimport './App.css';\nimport BurgerBuilder from \"./containers/BurgerBuilder\";\nimport Layout from \"./components/Layout/Layout\";\nimport \"./assets/font-awesome/css/all.css\";\n\nconst App = () => (\n    <div>\n        <Layout>\n            <BurgerBuilder />\n        </Layout>\n   </div>\n)\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('App'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}